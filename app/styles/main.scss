$standard-margin: 30px;

.top-bar {
  background: #D69C1E;
  color: #fff;
}

.counter-container {
}

.counter-outer-container {
}

.item-container {
}

.counter-number {
}

.counter-description {
}

.counter-title-container {
}

.counter-title-paragraph {
}

.counter-title {
}

.show-zeros-container {

  .info-text {
  }

  input[type=checkbox] {
    visibility: hidden;
  }
}

/* SQUARED THREE */
.squaredThree {
  width: 20px;
  margin: 20px auto;
  position: relative;
}

.squaredThree label {
  cursor: pointer;
  position: absolute;
  width: 20px;
  height: 20px;
  top: 0;
  border-radius: 4px;

  -webkit-box-shadow: inset 0px 1px 1px rgba(0,0,0,0.5), 0px 1px 0px rgba(255,255,255,.4);
  -moz-box-shadow: inset 0px 1px 1px rgba(0,0,0,0.5), 0px 1px 0px rgba(255,255,255,.4);
  box-shadow: inset 0px 1px 1px rgba(0,0,0,0.5), 0px 1px 0px rgba(255,255,255,.4);

  background: #e2e2e2; /* Old browsers */
  background: -moz-linear-gradient(top,  #e2e2e2 0%, #fefefe 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,#e2e2e2), color-stop(100%,#fefefe)); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top,  #e2e2e2 0%,#fefefe 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top,  #e2e2e2 0%,#fefefe 100%); /* Opera 11.10+ */
  background: -ms-linear-gradient(top,  #e2e2e2 0%,#fefefe 100%); /* IE10+ */
  background: linear-gradient(to bottom,  #e2e2e2 0%,#fefefe 100%); /* W3C */
}

.squaredThree label:after {
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";
  filter: alpha(opacity=0);
  opacity: 0;
  content: '';
  position: absolute;
  width: 9px;
  height: 5px;
  background: transparent;
  top: 8px;
  left: 6px;
  border: 3px solid #404040;
  border-top: none;
  border-right: none;

  -webkit-transform: rotate(-45deg);
  -moz-transform: rotate(-45deg);
  -o-transform: rotate(-45deg);
  -ms-transform: rotate(-45deg);
  transform: rotate(-45deg);
}

.squaredThree label:hover::after {
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=30)";
  filter: alpha(opacity=30);
  opacity: 0.3;
}

.squaredThree input[type=checkbox]:checked + label:after {
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=100)";
  filter: alpha(opacity=100);
  opacity: 1;
}

